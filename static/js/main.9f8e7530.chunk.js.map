{"version":3,"sources":["components/WineList.js","components/ZipLookup.js","App.js","serviceWorker.js","index.js"],"names":["WineList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","bind","assertThisInitialized","state","error","isLoaded","mainItems","selected","_this2","fetch","then","res","json","result","setState","response","e","target","value","_this3","_this$state","react_default","a","createElement","message","className","map","item","key","product","name","type","checked","onChange","listPrice","href","Component","handleSubmit","handleKeyUp","city","stateName","length","url","console","log","event","preventDefault","zip","_this4","onSubmit","required","onKeyUp","ref","input","style","font-style","display","App","document","title","WineList_WineList","ZipLookup_WineList","React","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9f8e7530.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport default class WineList extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      error: null,\n      isLoaded: false,\n      mainItems: [],\n      selected: null\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://www.wsjwine.com/api/offer/0033008')\n    .then(res => res.json())\n    .then(\n      result => {\n        this.setState({\n          isLoaded: true,\n          mainItems: result.response.mainItems\n        });\n      },\n      // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      (error) => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      }\n    )\n  }\n\n  handleChange(e) {\n    this.setState({\n      selected: e.target.value\n    })\n  }\n\n  render() {\n    const { error, isLoaded, mainItems, selected } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <div className=\"container\">\n          <div className=\"panel panel-default\">\n            <div className=\"panel-body\">\n              <div className=\"panel-header\">\n                <h3 className=\"panel-title\">Which Case Would You Like?</h3>          \n              </div>\n                <p className=\"panel-body\">\n                  Whatever you choose, we'll add in two bonus Cabs and two crystal glasses and you'll have the complete package - worth over $250 - for ONLY $69.99 (plud $19.99 shipping & applicable tax; please allow 5-10 days for delivery, depending on shipping state).\n                </p>\n                <ul>\n                {mainItems.map(item => (\n                  <li key={item.product.name}>\n                    <label>\n                      <input type=\"radio\" checked={this.state.selected === item.product.name} onChange={this.handleChange} value={item.product.name}/>\n                      <span>\n                        {item.product.name} &nbsp;\n                      </span>\n                      <span>\n                        + 2 BONUS Bottles & Glasses &nbsp;\n                      </span>\n                      <span>\n                        JUST ${item.listPrice} &nbsp; <a href='#'>view wines</a>\n                      </span>\n                    </label>\n                    \n                  </li>\n                ))}\n                </ul>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class WineList extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleKeyUp = this.handleKeyUp.bind(this);\n  \n    this.state = {\n      error: null,\n      isLoaded: false,\n      city: null,\n      stateName: null,\n    };\n  }\n\n  handleKeyUp(e) {\n    // set state of zipcode\n    \n    if (e.target.value.length === 5) {\n      var params = e.target.value;\n    var url = ('https://www.wsjwine.com/api/address/zipcode/' + params);\n    console.log(url);\n    fetch(url)\n    .then(res => res.json())\n    .then(\n      result => {\n        this.setState({\n          isLoaded: true,\n          city: result.response.city,\n          stateName: result.response.stateName\n        });\n      },\n      (error) => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      }\n    )\n    } else {\n      this.setState({\n        isLoaded: false\n      });\n    }\n  };\n\n  handleSubmit(event) {\n    event.preventDefault();\n    var params = event.target.zip.value;\n    var url = ('https://www.wsjwine.com/api/address/zipcode/' + params);\n    console.log(url);\n    fetch(url)\n    .then(res => res.json())\n    .then(\n      result => {\n        this.setState({\n          isLoaded: true,\n          city: result.response.city,\n          stateName: result.response.stateName\n        });\n      },\n      (error) => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      }\n    )\n  }\n\n  render() {\n\n    const { error, city, stateName, isLoaded } = this.state;\n\n    if (error) {\n        return <div>Error: {error.message}</div>;\n    } else {\n      return (\n        <div className=\"container\">\n          <form onSubmit={this.handleSubmit}>\n            <label>\n              <span className=\"required\">*</span> ZIP\n            </label>\n\n              <input \n                required \n                name=\"zip\" \n                type=\"text\" \n                onKeyUp={this.handleKeyUp}\n                ref={(input) => this.input = input} \n              />\n              {!isLoaded ? \n              <span style={{\"font-style\":\"italic\"}}>Enter ZIP to populate City and State</span> :\n              <span className={isLoaded?'visible':'hidden'}>{city}, {stateName}</span>\n              }\n                <span style={stateName === \"Connecticut\"?{display:'block'}:{display:\"none\"}} className=\"message-ct\">\n                  Upon completion of this form, your order will be forwarded to The Wine Cellar, located in Wallingford, CT for processing and shipping.\n                </span>\n          </form>\n        </div>\n      )\n    }\n  }\n}","import React from 'react';\nimport WineList from './components/WineList';\nimport ZipLookup from './components/ZipLookup';\nimport './App.css';\n\nclass App extends React.Component {\n  componentDidMount(){\n    document.title = \"Maya\"\n  }\n  render() {\n    return (\n      <div>\n      <WineList></WineList><br />\n      <ZipLookup></ZipLookup>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}